{"version":3,"sources":["draft-treeview.js"],"names":["draft","Container","mixin","tree","undefined","this","_tree","domPrefix","domID","doc","element","find","document","getElementByID","render","node","createElement","id","className","textContent","appendChild","propNode","propButton","setAttribute","propLabel","propList","props","prop","item","on","val","removeChild","hasOwnProperty","childNode","button","label","list","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","Symbol","iterator","next","done","child","value","err","firstChild"],"mappings":"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","file":"draft-treeview.min.js","sourcesContent":["/*\n* draft-treeview - A plugin for draft.js that renders nice tree views in the DOM\n* version v0.0.0\n* https://github.com/D1SC0tech/draft-treeview\n*\n* copyright Jordi Pakey-Rodriguez <jordi.orlando@gmail.com>\n* license MIT\n*\n* BUILT: Tue Jan 19 2016 21:03:42 GMT-0600 (CST)\n*/\n(function() {\n  /* var blacklist = ['type', 'id'];\n  var treeString = this.stringify(blacklist).split('\"').join('');\n  this.dom.treeView.firstChild.textContent = `${this.domID}: ${treeString}`;\n\n  var longestLine = treeString.split('\\n').reduce(function(a, b) {\n    return a.length > b.length ? a : b;\n  });\n  // HACK: change 84 to a non-hardcoded value\n  this.dom.treeView.style.width =\n    `${Math.min(longestLine.length + 4, 84)}ch`; */\n\n  /* for (let child of this.children) {\n    simple.children[child.domID] = child;\n  } */\n\n  draft.Container.mixin({\n    tree() {\n      if (this._tree === undefined) {\n        var domPrefix = `${this.domID}:tree`;\n        if (this.doc !== undefined) {\n          domPrefix = `${this.doc.domID}:${domPrefix}`;\n        }\n        var domID = function(element) {\n          return `${domPrefix}:${element.domID}`;\n        };\n\n        var find = function(element) {\n          return document.getElementByID(domID(element));\n        };\n\n        var render = function(element) {\n          var node = document.createElement('li');\n          node.id = domID(element);\n          node.className = 'draft-tree-element';\n\n          var id = document.createElement('strong');\n          id.textContent = `${element.domID}`;\n          node.appendChild(id);\n\n          var propNode = document.createElement('div');\n          node.appendChild(propNode);\n\n          var propButton = document.createElement('input');\n          // TODO: ensure unique id\n          propButton.id = `${node.id}:properties`;\n          propButton.setAttribute('type', 'checkbox');\n          propButton.setAttribute('checked', null);\n          propNode.appendChild(propButton);\n\n          var propLabel = document.createElement('label');\n          propLabel.textContent = 'properties:';\n          propLabel.setAttribute('for', propButton.id);\n          propNode.appendChild(propLabel);\n\n          var propList = document.createElement('ol');\n          propNode.appendChild(propList);\n\n          // TODO: remove props, use document.getElementByID instead\n          var props = {};\n          for (let prop in element.prop()) {\n            let item = document.createElement('li');\n            item.textContent = `${prop}: ${element.prop(prop)}`;\n            props[prop] = item;\n            propList.appendChild(item);\n          }\n\n          element.on('change', function(prop, val) {\n            if (val === null) {\n              propList.removeChild(props[prop]);\n            } else {\n              if (!props.hasOwnProperty(prop)) {\n                let item = document.createElement('li');\n                props[prop] = item;\n                propList.appendChild(item);\n              }\n\n              props[prop].textContent = `${prop}: ${val}`;\n            }\n          });\n\n          // TODO: do a faster check than instanceof\n          // Extra code to handle elements that have children\n          if (element instanceof draft.Container) {\n            let childNode = document.createElement('div');\n            node.appendChild(childNode);\n\n            let button = document.createElement('input');\n            // TODO: ensure unique id\n            button.id = `${node.id}:children`;\n            button.setAttribute('type', 'checkbox');\n            button.setAttribute('checked', null);\n            childNode.appendChild(button);\n\n            let label = document.createElement('label');\n            label.textContent = 'children:';\n            label.setAttribute('for', button.id);\n            childNode.appendChild(label);\n\n            let list = document.createElement('ol');\n            childNode.appendChild(list);\n\n            for (let child of element.children) {\n              list.appendChild(render(child));\n            }\n\n            element.on('add', function(child) {\n              list.appendChild(render(child));\n            });\n\n            element.on('remove', function(child) {\n              list.removeChild(find(child));\n            });\n          }\n\n          return node;\n        };\n\n        var tree = this._tree = document.createElement('div');\n        tree.className = 'draft-tree';\n\n        var list = document.createElement('ul');\n        list.appendChild(render(this));\n        list.firstChild.className = '';\n        tree.appendChild(list);\n      }\n\n      return this._tree;\n    }\n  });\n\n\n\n  /* var css = document.createElement('link');\n  css.setAttribute('rel', 'stylesheet');\n  css.setAttribute('type', 'text/css');\n  css.setAttribute('href', 'bower_components/draft-treeview/main.css');\n\n  document.getElementsByTagName('head')[0].appendChild(css); */\n})();\n"],"sourceRoot":"/source/"}